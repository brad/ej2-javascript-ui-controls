define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.sectionsProperty = ['sections', 'sec'];
    exports.fontSubstitutionTableProperty = ['fontSubstitutionTable', 'fst'];
    exports.characterFormatProperty = ['characterFormat', 'cf'];
    exports.paragraphFormatProperty = ['paragraphFormat', 'pf'];
    exports.listsProperty = ['lists', 'li'];
    exports.abstractListsProperty = ['abstractLists', 'al'];
    exports.backgroundProperty = ['background', 'bg'];
    exports.stylesProperty = ['styles', 'sty'];
    exports.commentsProperty = ['comments', 'cm'];
    exports.revisionsProperty = ['revisions', 'r'];
    exports.customXmlProperty = ['customXml', 'cx'];
    exports.defaultTabWidthProperty = ['defaultTabWidth', 'dtw'];
    exports.formattingProperty = ['formatting', 'fmt'];
    exports.trackChangesProperty = ['trackChanges', 'tc'];
    exports.protectionTypeProperty = ['protectionType', 'pt'];
    exports.enforcementProperty = ['enforcement', 'enf'];
    exports.hashValueProperty = ['hashValue', 'hv'];
    exports.saltValueProperty = ['saltValue', 'sv'];
    exports.cryptProviderTypeProperty = ['cryptProviderType', 'cpt'];
    exports.cryptAlgorithmClassProperty = ['cryptAlgorithmClass', 'cac'];
    exports.cryptAlgorithmTypeProperty = ['cryptAlgorithmType', 'cat'];
    exports.cryptAlgorithmSidProperty = ['cryptAlgorithmSid', 'cas'];
    exports.cryptSpinCountProperty = ['cryptSpinCount', 'csc'];
    exports.doNotUseHTMLParagraphAutoSpacingProperty = ['dontUseHTMLParagraphAutoSpacing', 'dhtml'];
    exports.alignTablesRowByRowProperty = ['alignTablesRowByRow', 'atrr'];
    exports.formFieldShadingProperty = ['formFieldShading', 'ffs'];
    exports.lastParagraphMarkCopiedProperty = ['lastParagraphMarkCopied', 'lpmc'];
    exports.footnotesProperty = ['footnotes', 'fn'];
    exports.endnotesProperty = ['endnotes', 'en'];
    exports.compatibilityModeProperty = ['compatibilityMode', 'comp'];
    exports.themeFontLanguagesProperty = ['themeFontLanguages', 'tfl'];
    exports.themesProperty = ['themes', 'thm'];
    exports.nameProperty = ['name', 'n'];
    exports.basedOnProperty = ['basedOn', 'b'];
    exports.nextProperty = ['next', 'nx'];
    exports.linkProperty = ['link', 'l'];
    exports.localeIdProperty = ['localeId', 'id'];
    exports.localeIdFarEastProperty = ['localeIdFarEast', 'idfe'];
    exports.localeIdBidiProperty = ['localeIdBidi', 'idbi'];
    exports.boldProperty = ['bold', 'b'];
    exports.italicProperty = ['italic', 'i'];
    exports.underlineProperty = ['underline', 'u'];
    exports.baselineAlignmentProperty = ['baselineAlignment', 'ba'];
    exports.strikethroughProperty = ['strikethrough', 'st'];
    exports.highlightColorProperty = ['highlightColor', 'hc'];
    exports.fontSizeProperty = ['fontSize', 'fsz'];
    exports.fontColorProperty = ['fontColor', 'fc'];
    exports.fontFamilyProperty = ['fontFamily', 'ff'];
    exports.styleNameProperty = ['styleName', 'stn'];
    exports.bidiProperty = ['bidi', 'bi'];
    exports.bdoProperty = ['bdo', 'bdo'];
    exports.breakClearTypeProperty = ['breakClearType', 'bct'];
    exports.fontSizeBidiProperty = ['fontSizeBidi', 'fszbi'];
    exports.fontFamilyBidiProperty = ['fontFamilyBidi', 'ffbi'];
    exports.boldBidiProperty = ['boldBidi', 'bbi'];
    exports.italicBidiProperty = ['italicBidi', 'ibi'];
    exports.allCapsProperty = ['allCaps', 'ac'];
    exports.complexScriptProperty = ['complexScript', 'cs'];
    exports.fontFamilyAsciiProperty = ['fontFamilyAscii', 'ffa'];
    exports.fontFamilyFarEastProperty = ['fontFamilyFarEast', 'fffe'];
    exports.fontFamilyNonFarEastProperty = ['fontFamilyNonFarEast', 'ffnfe'];
    exports.revisionIdsProperty = ['revisionIds', 'rids'];
    exports.listIdProperty = ['listId', 'lid'];
    exports.characterSpacingProperty = ['characterSpacing', 'csp'];
    exports.scalingProperty = ['scaling', 'sc'];
    exports.listLevelNumberProperty = ['listLevelNumber', 'lilno'];
    exports.leftIndentProperty = ['leftIndent', 'lin'];
    exports.rightIndentProperty = ['rightIndent', 'rin'];
    exports.firstLineIndentProperty = ['firstLineIndent', 'fin'];
    exports.textAlignmentProperty = ['textAlignment', 'ta'];
    exports.afterSpacingProperty = ['afterSpacing', 'as'];
    exports.beforeSpacingProperty = ['beforeSpacing', 'bs'];
    exports.spaceAfterAutoProperty = ['spaceAfterAuto', 'saa'];
    exports.spaceBeforeAutoProperty = ['spaceBeforeAuto', 'sba'];
    exports.lineSpacingProperty = ['lineSpacing', 'ls'];
    exports.lineSpacingTypeProperty = ['lineSpacingType', 'lst'];
    exports.listFormatProperty = ['listFormat', 'lif'];
    exports.keepWithNextProperty = ['keepWithNext', 'kwn'];
    exports.widowControlProperty = ['widowControl', 'wc'];
    exports.keepLinesTogetherProperty = ['keepLinesTogether', 'klt'];
    exports.outlineLevelProperty = ['outlineLevel', 'ol'];
    exports.contextualSpacingProperty = ['contextualSpacing', 'cs'];
    exports.bordersProperty = ['borders', 'bdrs'];
    exports.tabsProperty = ['tabs', 'tb'];
    exports.headerDistanceProperty = ['headerDistance', 'hd'];
    exports.footerDistanceProperty = ['footerDistance', 'fd'];
    exports.differentFirstPageProperty = ['differentFirstPage', 'dfp'];
    exports.differentOddAndEvenPagesProperty = ['differentOddAndEvenPages', 'doep'];
    exports.pageWidthProperty = ['pageWidth', 'pw'];
    exports.pageHeightProperty = ['pageHeight', 'ph'];
    exports.leftMarginProperty = ['leftMargin', 'lm'];
    exports.rightMarginProperty = ['rightMargin', 'rm'];
    exports.topMarginProperty = ['topMargin', 'tm'];
    exports.bottomMarginProperty = ['bottomMargin', 'bm'];
    exports.restartPageNumberingProperty = ['restartPageNumbering', 'rpn'];
    exports.pageStartingNumberProperty = ['pageStartingNumber', 'psn'];
    exports.endnoteNumberFormatProperty = ['endnoteNumberFormat', 'enf'];
    exports.footNoteNumberFormatProperty = ['footNoteNumberFormat', 'fnf'];
    exports.restartIndexForFootnotesProperty = ['restartIndexForFootnotes', 'rif'];
    exports.restartIndexForEndnotesProperty = ['restartIndexForEndnotes', 'rie'];
    exports.initialFootNoteNumberProperty = ['initialFootNoteNumber', 'ifn'];
    exports.initialEndNoteNumberProperty = ['initialEndNoteNumber', 'ien'];
    exports.pageNumberStyleProperty = ['pageNumberStyle', 'pgns'];
    exports.columnsProperty = ['columns', 'cols'];
    exports.numberOfColumnsProperty = ['numberOfColumns', 'ncols'];
    exports.equalWidthProperty = ['equalWidth', 'eqw'];
    exports.lineBetweenColumnsProperty = ['lineBetweenColumns', 'lbtc'];
    exports.breakCodeProperty = ['breakCode', 'bc'];
    exports.cellWidthProperty = ['cellWidth', 'cw'];
    exports.columnSpanProperty = ['columnSpan', 'colsp'];
    exports.rowSpanProperty = ['rowSpan', 'rwsp'];
    exports.verticalAlignmentProperty = ['verticalAlignment', 'va'];
    exports.allowBreakAcrossPagesProperty = ['allowBreakAcrossPages', 'abrk'];
    exports.isHeaderProperty = ['isHeader', 'hdr'];
    exports.heightTypeProperty = ['heightType', 'ht'];
    exports.beforeWidthProperty = ['beforeWidth', 'bw'];
    exports.afterWidthProperty = ['afterWidth', 'aw'];
    exports.gridBeforeProperty = ['gridBefore', 'gb'];
    exports.gridBeforeWidthProperty = ['gridBeforeWidth', 'gbw'];
    exports.gridBeforeWidthTypeProperty = ['gridBeforeWidthType', 'gbwt'];
    exports.gridAfterProperty = ['gridAfter', 'ga'];
    exports.gridAfterWidthProperty = ['gridAfterWidth', 'gaw'];
    exports.gridAfterWidthTypeProperty = ['gridAfterWidthType', 'gawt'];
    exports.allowAutoFitProperty = ['allowAutoFit', 'auft'];
    exports.cellSpacingProperty = ['cellSpacing', 'csp'];
    exports.shadingProperty = ['shading', 'sd'];
    exports.tableAlignmentProperty = ['tableAlignment', 'ta'];
    exports.preferredWidthProperty = ['preferredWidth', 'pw'];
    exports.preferredWidthTypeProperty = ['preferredWidthType', 'pwt'];
    exports.horizontalPositionAbsProperty = ['horizontalPositionAbs', 'hpa'];
    exports.textureProperty = ['texture', 't'];
    exports.backgroundColorProperty = ['backgroundColor', 'bgc'];
    exports.foregroundColorProperty = ['foregroundColor', 'fgc'];
    exports.shadowProperty = ['shadow', 'sh'];
    exports.hasNoneStyleProperty = ['hasNoneStyle', 'hns'];
    exports.verticalProperty = ['vertical', 'v'];
    exports.horizontalProperty = ['horizontal', 'h'];
    exports.diagonalUpProperty = ['diagonalUp', 'du'];
    exports.diagonalDownProperty = ['diagonalDown', 'dd'];
    exports.lineStyleProperty = ['lineStyle', 'ls'];
    exports.lineWidthProperty = ['lineWidth', 'lw'];
    exports.layoutProperty = ['layout', 'l'];
    exports.dataFormatProperty = ['dataFormat', 'df'];
    exports.yValueProperty = ['yValue', 'y'];
    exports.chartDataProperty = ['chartData', 'chd'];
    exports.categoryXNameProperty = ['categoryXName', 'cx'];
    exports.lineProperty = ['line', 'l'];
    exports.foreColorProperty = ['foreColor', 'fc'];
    exports.patternProperty = ['pattern', 'pt'];
    exports.layoutXProperty = ['layoutX', 'x'];
    exports.layoutYProperty = ['layoutY', 'y'];
    exports.directionProperty = ['direction', 'dir'];
    exports.endStyleProperty = ['endStyle', 'est'];
    exports.numberValueProperty = ['numberValue', 'no'];
    exports.markerStyleProperty = ['markerStyle', 'mst'];
    exports.markerColorProperty = ['markerColor', 'mc'];
    exports.markerSizeProperty = ['markerSize', 'msz'];
    exports.forwardProperty = ['forward', 'fw'];
    exports.backwardProperty = ['backward', 'bw'];
    exports.interceptProperty = ['intercept', 'itr'];
    exports.isDisplayRSquaredProperty = ['isDisplayRSquared', 'idrs'];
    exports.isDisplayEquationProperty = ['isDisplayEquation', 'ideq'];
    exports.seriesNameProperty = ['seriesName', 'sn'];
    exports.dataLabelProperty = ['dataLabel', 'sl'];
    exports.errorBarProperty = ['errorBar', 'eb'];
    exports.seriesFormatProperty = ['seriesFormat', 'sf'];
    exports.trendLinesProperty = ['trendLines', 'tl'];
    exports.dataPointsProperty = ['dataPoints', 'dp'];
    exports.firstSliceAngleProperty = ['firstSliceAngle', 'fsa'];
    exports.holeSizeProperty = ['holeSize', 'hsz'];
    exports.isLegendKeyProperty = ['isLegendKey', 'lk'];
    exports.isBubbleSizeProperty = ['isBubbleSize', 'bsz'];
    exports.isCategoryNameProperty = ['isCategoryName', 'icn'];
    exports.isSeriesNameProperty = ['isSeriesName', 'isn'];
    exports.isValueProperty = ['isValue', 'iv'];
    exports.isPercentageProperty = ['isPercentage', 'ip'];
    exports.isLeaderLinesProperty = ['isLeaderLines', 'il'];
    exports.showSeriesKeysProperty = ['showSeriesKeys', 'sk'];
    exports.hasHorizontalBorderProperty = ['hasHorzBorder', 'hhbdr'];
    exports.hasVerticalBorderProperty = ['hasVertBorder', 'hvbdr'];
    exports.hasBordersProperty = ['hasBorders', 'hbdr'];
    exports.categoryTypeProperty = ['categoryType', 'ct'];
    exports.chartCategoryProperty = ['chartCategory', 'c'];
    exports.chartSeriesProperty = ['chartSeries', 'cs'];
    exports.chartAreaProperty = ['chartArea', 'ca'];
    exports.chartTitleAreaProperty = ['chartTitleArea', 'cta'];
    exports.plotAreaProperty = ['plotArea', 'pa'];
    exports.chartLegendProperty = ['chartLegend', 'cl'];
    exports.chartPrimaryCategoryAxisProperty = ['chartPrimaryCategoryAxis', 'cpca'];
    exports.chartPrimaryValueAxisProperty = ['chartPrimaryValueAxis', 'cpva'];
    exports.chartTitleProperty = ['chartTitle', 'ctt'];
    exports.chartTypeProperty = ['chartType', 'ct'];
    exports.gapWidthProperty = ['gapWidth', 'gw'];
    exports.overlapProperty = ['overlap', 'o'];
    exports.chartDataTableProperty = ['chartDataTable', 'cdt'];
    exports.textProperty = ['text', 'tlp'];
    exports.shapeIdProperty = ['shapeId', 'sid'];
    exports.alternativeTextProperty = ['alternativeText', 'at'];
    exports.visibleProperty = ['visible', 'v'];
    exports.belowTextProperty = ['belowText', 'b'];
    exports.horizontalRuleProperty = ['horizontalRule', 'ihr'];
    exports.widthProperty = ['width', 'w'];
    exports.heightProperty = ['height', 'h'];
    exports.widthScaleProperty = ['widthScale', 'ws'];
    exports.heightScaleProperty = ['heightScale', 'hs'];
    exports.lineFormatProperty = ['lineFormat', 'lf'];
    exports.fillFormatProperty = ['fillFormat', 'ff'];
    exports.textWrappingStyleProperty = ['textWrappingStyle', 'tws'];
    exports.textWrappingTypeProperty = ['textWrappingType', 'twt'];
    exports.verticalRelativePercentProperty = ['verticalRelativePercent', 'vrp'];
    exports.horizontalRelativePercentProperty = ['horizontalRelativePercent', 'hrp'];
    exports.heightRelativePercentProperty = ['heightRelativePercent', 'hrp'];
    exports.widthRelativePercentProperty = ['widthRelativePercent', 'wrp'];
    exports.zOrderPositionProperty = ['zOrderPosition', 'z'];
    exports.layoutInCellProperty = ['layoutInCell', 'lc'];
    exports.lockAnchorProperty = ['lockAnchor', 'la'];
    exports.autoShapeTypeProperty = ['autoShapeType', 'ast'];
    exports.textFrameProperty = ['textFrame', 'tf'];
    exports.colorProperty = ['color', 'c'];
    exports.fillProperty = ['fill', 'f'];
    exports.textVerticalAlignmentProperty = ['textVerticalAlignment', 'tva'];
    exports.imageStringProperty = ['imageString', 'img'];
    exports.metaFileImageStringProperty = ['metaFileImageString', 'mtimg'];
    exports.lengthProperty = ['length', 'l'];
    exports.isInlineImageProperty = ['isInlineImage', 'inimg'];
    exports.isMetaFileProperty = ['isMetaFile', 'imf'];
    exports.topProperty = ['top', 'tp'];
    exports.bottomProperty = ['bottom', 'bt'];
    exports.rightProperty = ['right', 'rg'];
    exports.leftProperty = ['left', 'lt'];
    exports.getImageHeightProperty = ['getimageheight', 'gih'];
    exports.getImageWidthProperty = ['getimagewidth', 'giw'];
    exports.hasFieldEndProperty = ['hasFieldEnd', 'hfe'];
    exports.formFieldDataProperty = ['formFieldData', 'ffd'];
    exports.fieldTypeProperty = ['fieldType', 'ft'];
    exports.enabledProperty = ['enabled', 'e'];
    exports.helpTextProperty = ['helpText', 'h'];
    exports.statusTextProperty = ['statusText', 'st'];
    exports.textInputProperty = ['textInput', 'ti'];
    exports.checkBoxProperty = ['checkBox', 'c'];
    exports.dropDownListProperty = ['dropDownList', 'ddl'];
    exports.maxLengthProperty = ['maxLength', 'ml'];
    exports.defaultValueProperty = ['defaultValue', 'dv'];
    exports.formatProperty = ['format', 'f'];
    exports.sizeTypeProperty = ['sizeType', 'szt'];
    exports.sizeProperty = ['size', 'sz'];
    exports.checkedProperty = ['checked', 'chk'];
    exports.dropDownItemsProperty = ['dropDownItems', 'ddi'];
    exports.selectedIndexProperty = ['selectedIndex', 'si'];
    exports.commentIdProperty = ['commentId', 'cid'];
    exports.commentCharacterTypeProperty = ['commentCharacterType', 'cct'];
    exports.authorProperty = ['author', 'a'];
    exports.initialProperty = ['initial', 'i'];
    exports.dateProperty = ['date', 'dt'];
    exports.doneProperty = ['done', 'dn'];
    exports.replyCommentsProperty = ['replyComments', 'rc'];
    exports.revisionTypeProperty = ['revisionType', 'rt'];
    exports.revisionIdProperty = ['revisionId', 'rid'];
    exports.itemIDProperty = ['itemID', 'iid'];
    exports.xmlProperty = ['xml', 'x'];
    exports.footnoteTypeProperty = ['footnoteType', 'fnt'];
    exports.symbolCodeProperty = ['symbolCode', 'sc'];
    exports.symbolFontNameProperty = ['symbolFontName', 'sfn'];
    exports.customMarkerProperty = ['customMarker', 'cm'];
    exports.inlinesProperty = ['inlines', 'i'];
    exports.contentControlPropertiesProperty = ['contentControlProperties', 'ccp'];
    exports.lockContentControlProperty = ['lockContentControl', 'lcc'];
    exports.lockContentsProperty = ['lockContents', 'lc'];
    exports.tagProperty = ['tag', 'tg'];
    exports.titleProperty = ['title', 'tt'];
    exports.hasPlaceHolderTextProperty = ['hasPlaceHolderText', 'hpt'];
    exports.multiLineProperty = ['multiline', 'mul'];
    exports.isTemporaryProperty = ['isTemporary', 'it'];
    exports.dateCalendarTypeProperty = ['dateCalendarType', 'dtct'];
    exports.dateStorageFormatProperty = ['dateStorageFormat', 'dtsf'];
    exports.dateDisplayLocaleProperty = ['dateDisplayLocale', 'dtdl'];
    exports.dateDisplayFormatProperty = ['dateDisplayFormat', 'dtdf'];
    exports.isCheckedProperty = ['isChecked', 'ichk'];
    exports.uncheckedStateProperty = ['uncheckedState', 'uchk'];
    exports.checkedStateProperty = ['checkedState', 'chks'];
    exports.contentControlListItemsProperty = ['contentControlListItems', 'ccli'];
    exports.xmlMappingProperty = ['xmlMapping', 'x'];
    exports.fontProperty = ['font', 'f'];
    exports.valueProperty = ['value', 'v'];
    exports.displayTextProperty = ['displayText', 'dt'];
    exports.isMappedProperty = ['isMapped', 'imap'];
    exports.isWordMlProperty = ['isWordMl', 'iwml'];
    exports.prefixMappingProperty = ['prefixMapping', 'pmap'];
    exports.xPathProperty = ['xPath', 'xp'];
    exports.storeItemIdProperty = ['storeItemId', 'siid'];
    exports.customXmlPartProperty = ['customXmlPart', 'cxp'];
    exports.idProperty = ['id', 'i'];
    exports.cellFormatProperty = ['cellFormat', 'tcpr'];
    exports.rowFormatProperty = ['rowFormat', 'trpr'];
    exports.cellsProperty = ['cells', 'c'];
    exports.rowsProperty = ['rows', 'r'];
    exports.descriptionProperty = ['description', 'desc'];
    exports.wrapTextAroundProperty = ['wrapTextAround', 'wta'];
    exports.isLegalStyleNumberingProperty = ['isLegalStyleNumbering', 'isLgl'];
    exports.positioningProperty = ['positioning', 'p'];
    exports.tableFormatProperty = ['tableFormat', 'tblpr'];
    exports.allowOverlapProperty = ['allowOverlap', 'ao'];
    exports.distanceTopProperty = ['distanceTop', 'dt'];
    exports.distanceRightProperty = ['distanceRight', 'dr'];
    exports.distanceLeftProperty = ['distanceLeft', 'dl'];
    exports.distanceBottomProperty = ['distanceBottom', 'db'];
    exports.verticalOriginProperty = ['verticalOrigin', 'vo'];
    exports.verticalPositionProperty = ['verticalPosition', 'vp'];
    exports.horizontalOriginProperty = ['horizontalOrigin', 'ho'];
    exports.horizontalAlignmentProperty = ['horizontalAlignment', 'ha'];
    exports.horizontalPositionProperty = ['horizontalPosition', 'hp'];
    exports.blocksProperty = ['blocks', 'b'];
    exports.headerProperty = ['header', 'h'];
    exports.footerProperty = ['footer', 'f'];
    exports.evenHeaderProperty = ['evenHeader', 'eh'];
    exports.evenFooterProperty = ['evenFooter', 'ef'];
    exports.firstPageHeaderProperty = ['firstPageHeader', 'fph'];
    exports.firstPageFooterProperty = ['firstPageFooter', 'fpf'];
    exports.headersFootersProperty = ['headersFooters', 'hf'];
    exports.sectionFormatProperty = ['sectionFormat', 'secpr'];
    exports.listLevelPatternProperty = ['listLevelPattern', 'lilp'];
    exports.followCharacterProperty = ['followCharacter', 'fchar'];
    exports.startAtProperty = ['startAt', 'sa'];
    exports.restartLevelProperty = ['restartLevel', 'rl'];
    exports.levelNumberProperty = ['levelNumber', 'lvlno'];
    exports.numberFormatProperty = ['numberFormat', 'nf'];
    exports.abstractListIdProperty = ['abstractListId', 'alid'];
    exports.nsidProperty = 'nsid';
    exports.levelsProperty = ['levels', 'lvl'];
    exports.overrideListLevelProperty = ['overrideListLevel', 'o'];
    exports.levelOverridesProperty = ['levelOverrides', 'lo'];
    exports.separatorProperty = ['separator', 's'];
    exports.continuationSeparatorProperty = ['continuationSeparator', 'cs'];
    exports.continuationNoticeProperty = ['continuationNotice', 'cn'];
    exports.bookmarkTypeProperty = ['bookmarkType', 'bkt'];
    exports.propertiesProperty = ['properties', 'p'];
    exports.tabJustificationProperty = ['tabJustification', 'tj'];
    exports.positionProperty = ['position', 'p'];
    exports.deletePositionProperty = ['deletePosition', 'dp'];
    exports.leaderProperty = ['leader', 'l'];
    exports.tabLeaderProperty = ['tabLeader', 'tl'];
    exports.editRangeIdProperty = ['editRangeId', 'erid'];
    exports.columnFirstProperty = ['columnFirst', 'cft'];
    exports.columnLastProperty = ['columnLast', 'clt'];
    exports.userProperty = ['user', 'u'];
    exports.groupProperty = ['group', 'g'];
    exports.editableRangeStartProperty = ['editableRangeStart', 'ers'];
    exports.spaceProperty = ['space', 'sp'];
    exports.fontSchemeProperty = ['fontScheme', 'fsc'];
    exports.fontSchemeNameProperty = ['fontSchemeName', 'fscn'];
    exports.majorFontSchemeProperty = ['majorFontScheme', 'majfs'];
    exports.minorFontSchemeProperty = ['minorFontScheme', 'minfs'];
    exports.fontSchemeListProperty = ['fontSchemeList', 'fsl'];
    exports.fontTypefaceProperty = ['fontTypeface', 'ft'];
    exports.typefaceProperty = ['typeface', 't'];
    exports.panoseProperty = ['panose', 'p'];
    exports.typeProperty = ['type', 't'];
    exports.majorUnitProperty = ['majorUnit', 'maju'];
    exports.maximumValueProperty = ['maximumValue', 'maxv'];
    exports.minimumValueProperty = ['minimumValue', 'minv'];
    exports.hasMajorGridLinesProperty = ['hasMajorGridLines', 'hmajgl'];
    exports.hasMinorGridLinesProperty = ['hasMinorGridLines', 'hmingl'];
    exports.majorTickMarkProperty = ['majorTickMark', 'majtm'];
    exports.minorTickMarkProperty = ['minorTickMark', 'mintm'];
    exports.tickLabelPositionProperty = ['tickLabelPosition', 'tlp'];
    exports.rgbProperty = ['rgb', 'rgb'];
    exports.appearanceProperty = ['appearance', 'a'];
    exports.lineFormatTypeProperty = ['lineFormatType', 'lft'];
    exports.allowSpaceOfSameStyleInTableProperty = ['allowSpaceOfSameStyleInTable', 'stytbl'];
    exports.weightProperty = ['weight', 'w'];
    exports.inlineFormatProperty = ['inlineFormat', 'inf'];
    exports.fontNameProperty = ['fontName', 'fn'];
    exports.isCompressedProperty = ['isCompressed', 'comp'];
    exports.columnIndexProperty = ['columnIndex', 'ci'];
    exports.imagesProperty = ['images', 'imgs'];
    exports.isAfterParagraphMarkProperty = ['isAfterParagraphMark', 'apm'];
    exports.isAfterCellMarkProperty = ['isAfterCellMark', 'acm'];
    exports.isAfterRowMarkProperty = ['isAfterRowMark', 'arm'];
    exports.gridProperty = ['grid', 'grd'];
    exports.columnCountProperty = ['columnCount', 'colc'];
    exports.isAfterTableMarkProperty = ['isAfterTableMark', 'atm'];
    exports.incrementalOps = ['iOps'];
});
